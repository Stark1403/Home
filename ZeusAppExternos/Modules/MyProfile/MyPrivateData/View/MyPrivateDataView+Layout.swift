//
//  MyPrivateDataView+Layout.swift
//  ZeusAppExternos
//
//  Created Satori Tech 209 on 11/5/24.
//  Template generated by UPAX Zeus
//

import UIKit
import ZeusCoreDesignSystem

extension MyPrivateDataView {
    func addViews() {
       addSubview(containerView)
        containerView.addSubview(segmentedController)
        containerView.addSubview(privateDataView)
        containerView.addSubview(addressView)
        addressView.addSubview(mainScrollView)
        mainScrollView.addSubview(stackView)
    }
    
    func setupConstraints() {
        let btn = updateBtn.asUIKitView()
        addressView.addSubview(btn)
        NSLayoutConstraint.activate([
            containerView.topAnchor.constraint(equalTo: safeAreaLayoutGuide.topAnchor),
            containerView.leadingAnchor.constraint(equalTo: leadingAnchor),
            containerView.trailingAnchor.constraint(equalTo: trailingAnchor),
            containerView.bottomAnchor.constraint(equalTo: bottomAnchor),
            
            segmentedController.topAnchor.constraint(equalTo: containerView.topAnchor, constant: .smallB),
            segmentedController.leadingAnchor.constraint(equalTo: containerView.leadingAnchor, constant: .smallB),
            segmentedController.trailingAnchor.constraint(equalTo: containerView.trailingAnchor, constant: -.smallB),
            
            privateDataView.topAnchor.constraint(equalTo: segmentedController.bottomAnchor, constant: .mediumA),
            privateDataView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: .smallB),
            privateDataView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -.smallB),
            privateDataView.bottomAnchor.constraint(equalTo: safeAreaLayoutGuide.bottomAnchor),
            
            addressView.topAnchor.constraint(equalTo: segmentedController.bottomAnchor, constant: .mediumA),
            addressView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: .smallB),
            addressView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -.smallB),
            addressView.bottomAnchor.constraint(equalTo: safeAreaLayoutGuide.bottomAnchor),
            
            btn.leadingAnchor.constraint(equalTo: addressView.leadingAnchor),
            btn.trailingAnchor.constraint(equalTo: addressView.trailingAnchor),
            btn.bottomAnchor.constraint(equalTo: addressView.bottomAnchor, constant: -.smallB),
            
            mainScrollView.centerXAnchor.constraint(equalTo: addressView.centerXAnchor),
            mainScrollView.topAnchor.constraint(equalTo: addressView.topAnchor),
            mainScrollView.leadingAnchor.constraint(equalTo: addressView.leadingAnchor),
            mainScrollView.trailingAnchor.constraint(equalTo: addressView.trailingAnchor),
            mainScrollView.bottomAnchor.constraint(equalTo: btn.topAnchor, constant: -.smallB),
            
            stackView.centerXAnchor.constraint(equalTo: mainScrollView.centerXAnchor),
            stackView.topAnchor.constraint(equalTo: mainScrollView.topAnchor),
            stackView.leadingAnchor.constraint(equalTo: mainScrollView.leadingAnchor),
            stackView.trailingAnchor.constraint(equalTo: mainScrollView.trailingAnchor),
            stackView.bottomAnchor.constraint(equalTo: mainScrollView.bottomAnchor),
        ])
    }
}
