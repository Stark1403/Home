//
//  EmploymentDataViewController.swift
//  ZeusAppExternos
//
//  Created Satori Tech 209 on 12/31/24.
//  Template generated by UPAX Zeus
//

import UIKit
import ZeusCoreDesignSystem
import ZeusSessionInfo

class EmploymentDataViewController: ZDSUDNViewController {
	var presenter: EmploymentDataPresenterProtocol?
    
    /// Views for this controller
    let mainView = EmploymentDataView()

	override func viewDidLoad() {
        setName()
        super.viewDidLoad()
        view = mainView
        self.presenter?.getPersonalData()
        setupGestures()
    }
    
    private func setupGestures() {
        
    }
    private func setName(){
        view.backgroundColor = .white
        headerColor = SessionInfo.shared.company?.primaryUIColor
        navigationBarColor = .white
        style = .statusAndNavBarStyle(.medium)
        backString = "Mi cuenta"
        titleString = "Datos laborales"
    }
    
}

extension EmploymentDataViewController: EmploymentDataViewProtocol {
    func setPersonalData(personalData: PersonalInformation){
        mainView.positionTF.text = personalData.employment?.position ?? "--"
        mainView.workAreaTF.text = personalData.employment?.area ?? "--"
        mainView.stateTF.text = personalData.employment?.stateWork?.description ?? "--"
        mainView.branchTF.text = personalData.employment?.sucursal ?? "--"
        mainView.dischargeDateTF.text = personalData.employment?.discharge_date?.getDate()?.getStringDate(withFormat: "dd/MM/yyyy") ?? "--"
        mainView.vacationsTF.text = "\(personalData.employment?.vacation_days ?? 0)"
    }
    
    func failAlert(){
        var alert = ZDSAlert()
        alert.primaryColor = headerColor ?? .purple
        alert.title = "¡Oops! Algo pasó"
        alert.message = "La acción no se pudo completar correctamente. Inténtalo de nuevo."
        alert.primaryTitle = "Aceptar"
        
        alert.style = .error
        let view = alert.asUIKitViewController()
        view.modalPresentationStyle = .overCurrentContext
        view.modalTransitionStyle = .crossDissolve
        view.view.backgroundColor = .backgroundTransparency
        
        alert.onPrimaryAction = {
            view.dismiss(animated: true)
        }
        
        self.present(view, animated: true) {}
    }
    
    func showLoader(){
        showDSLoader()
    }
    
    func hideLoader(){
        hideDSLoader()
    }
}
