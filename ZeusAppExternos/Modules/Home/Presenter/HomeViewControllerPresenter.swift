//
//  HomeViewControllerPresenter.swift
//  ZeusAppExternos
//
//  Created Alexander Betanzos Lopez on 30/03/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import ZeusTermsConditions

class HomeViewControllerPresenter: HomeViewControllerPresenterProtocol {
    
    weak private var view: HomeViewControllerViewProtocol?
    var interactor: HomeViewControllerInteractorProtocol?
    private let router: HomeViewControllerWireframeProtocol

    init(interface: HomeViewControllerViewProtocol, interactor: HomeViewControllerInteractorProtocol?, router: HomeViewControllerWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getMenuForSession() {
        interactor?.getMenuForSession()
    }
    
    func getPermissions(zeusId: String) {
        interactor?.getPermissionsService(zeusId: zeusId)
    }
    
    func validateSession() {
        interactor?.validateSession()
    }
    
    func validateUniqueSession() {
        interactor?.validateUniqueSession()
    }
    
    func confirmUniqueSession() {
        interactor?.confirmUniqueSession()
    }
  
    func confirmNotDisableUser() {
      interactor?.confirmNotDisableUser()
    }
    
    func removeLoader() {
        view?.removeLoader()
    }
    
    func setMenu(menuFrameworks: [PermissionMenuModel], menuSlide: [PermissionMenuModel]){
        view?.setMenu(menuFrameworks: menuFrameworks, menuSlide: menuSlide)
    }

    func errorGetPermissionsMenu(_ error: String) {
        view?.errorNetworkReintent(error)
    }

    func showUniqueSessionAlert() {
        view?.showUniqueSessionAlert()
    }
    
    func setupLegalDocuments() {
        interactor?.setupLegalDocuments()
    }
    
    func showLegalRequest(update: LegalOptions) {
        router.showLegalRequest(update: update)
    }
    
    func openProfileBadgeID(delegate: BadgeIDViewDelegate?, image: UIImage?) {
        router.openProfilePhoto(delegate: delegate, image: image)
    }
    
    func getAnnouncements() {
        interactor?.getAnnouncements()
    }
    
    func setAnnouncements(announcements: [CarrouselModel]) {
        view?.setAnnouncements(announcements: announcements)
    }
}
