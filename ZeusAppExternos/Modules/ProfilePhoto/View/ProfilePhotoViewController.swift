//
//  ProfilePhotoViewController.swift
//  ZeusAppExternos
//
//  Created Martin Flores on 30/09/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by UPAX Zeus
//

import UIKit
import ZeusUtils
import ZeusSessionInfo

protocol ProfilePhotoViewControllerDelegate {
    func didSaveImage()
}

class ProfilePhotoViewController: ZUUDNViewController, ProfilePhotoViewProtocol {
       
	var presenter: ProfilePhotoPresenterProtocol?
    var previousImage: UIImage?
    var delegate: ProfilePhotoViewControllerDelegate?
    let views: ProfilePhotoViews = ProfilePhotoViews()
    
    override func loadView() {
        super.loadView()
    }

	override func viewDidLoad() {
        super.viewDidLoad()
        setupLayouts(views: views)
        setImage(previousImage)
        setAcronymLabel()
    }
    
    public override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        navigationController?.isNavigationBarHidden = true
    }
    
    override public func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.isNavigationBarHidden = false
    }
    
    func setImage(_ image: UIImage?) {
        DispatchQueue.main.async {
            if let image = image {
                self.views.acronymLabel.isHidden = true
                self.views.profileImageView.image = image
                self.previousImage = image
            } else {
                self.views.acronymLabel.isHidden = false
            }
        }
    }
    
    @objc func openChangePhotoModal() {
        let actionSheet = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        let cameraAction = UIAlertAction(title: "Tomar una foto", style: .default) { [weak self] _ in
            guard let self = self else { return }
            actionSheet.dismiss(animated: true)
            self.openAttach(option: .camera)
        }
        let galleryAction = UIAlertAction(title: "Elegir de la galería", style: .default) { [weak self] _ in
            guard let self = self else { return }
            actionSheet.dismiss(animated: true)
            self.openAttach(option: .gallery)
        }
        let cancel = UIAlertAction(title: "Cancelar", style: .cancel) { _ in
            actionSheet.dismiss(animated: true)
        }
        actionSheet.addAction(cameraAction)
        actionSheet.addAction(galleryAction)
        actionSheet.addAction(cancel)
        
        navigationController?.present(actionSheet, animated: true)
    }
    
    fileprivate func openAttach(option: MultimediaOption) {
        switch option {
        case .camera:
                ZUAuthorizationClass.askForAccessOrGotoSettingsFor(type: .camera, presenterForFail: self) {
                    DispatchQueue.main.async {
                        let vc = UIImagePickerController.setup(delegate: self)
                        self.navigationController?.present(vc, animated: true, completion: nil)
                    }
                }
            break
        case .gallery :
            pickPhoto(limit: 1, delegate: self)
            break
        }
    }
    
    @objc func saveChange() {
        guard let photo = self.previousImage else{
            return
        }
        presenter?.uploadPhoto(photo: photo)
    }
    
    func setAcronymLabel(){
        var acronym = ""
        let name = SessionInfo.shared.user?.name ?? ""

        let components = name.components(separatedBy: " ")
        if components.count >= 2 {
            if let firstLetter = components[0].first, let secondLetter = components[1].first {
                acronym = "\(firstLetter)\(secondLetter)"
            }
        }else{
            if let firstLetter = SessionInfo.shared.user?.name.first, let secondLetter = SessionInfo.shared.user?.lastName.first {
                acronym = "\(firstLetter)\(secondLetter)"
            }
        }
        views.acronymLabel.text = acronym
    }
}

extension ProfilePhotoViewController{
    func errorUploadPhoto() {
        errorAlert()
    }
    
    private func errorAlert() {
        let vc = UIStoryboard.overFullScreen(type: "Alert") as! AlertViewController
        vc.tittleAlert = "¡Lo sentimos!"
        vc.messageAlert = "A ocurrido un error"
        vc.cancelOutlined = true
        vc.titleButtonCancel = "Aceptar"
        vc.didTapAceptButton = {
           
        }
        vc.didTapCancelButton = {
            
        }
        self.present(vc, animated: true) {}
    }
    
    func uploadSuccess() {
        delegate?.didSaveImage()
        backAction()
    }
}

fileprivate enum MultimediaOption {
    case camera
    case gallery
}
